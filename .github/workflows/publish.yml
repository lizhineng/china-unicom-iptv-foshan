name: Publish

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    working-directory: ./decryptor

jobs:
  publish:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Set the version
        shell: bash
        run: |
          echo "DECRYPTOR_VERSION=$GITHUB_REF_NAME" >> $GITHUB_ENV
          echo "version is: ${{ env.DECRYPTOR_VERSION }}"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install libssl-dev
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update && sudo apt-get install -y libssl-dev
          fi

      - name: Build
        shell: bash
        run: |
          cargo --version
          cargo build --release --locked --target ${{ matrix.target }}

      - name: Setup archive
        shell: bash
        run: |
          staging="decryptor-${{ env.DECRYPTOR_VERSION }}-${{ matrix.target }}"
          mkdir -p "$staging"

          cp "target/${{ matrix.target }}/release/decryptor" "$staging/"
          tar -czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV

      - name: Upload the binaries
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          tag: ${{ github.ref }}
